<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cep.maintenance.contract.service.impl.MtContractMapper">
<!--유지보수 관련 sql 관리하는 Mapper.xml  -->
	<resultMap id="mtContractVO" type="com.cep.maintenance.contract.vo.MtContractVO">
		<result property="rowNum" column="ROW_NUM"/>
		<result property="mtIntegrateKey" column="MT_INTEGRATE_KEY"/>
		<result property="mtCtKey" column="MT_CT_KEY"/>
		<result property="mtSeq" column="MT_SEQ"/>
		<result property="mtAcKey" column="MT_AC_KEY"/>
		<result property="mtAcNm" column="MT_AC_NM"/>
		<result property="mtAcDirectorKey" column="MT_AC_DIRECTOR_KEY"/>
		<result property="mtAcDirectorNm" column="MT_AC_DIRECTOR_NM"/>
		<result property="acDirectorInfo" column="AC_DIRECTOR_INFO"/>
		<result property="mtNm" column="MT_NM"/>
		<result property="mtCtDt" column="MT_CT_DT"/>
		<result property="mtStartDt" column="MT_START_DT"/>
		<result property="mtEndDt" column="MT_END_DT"/>
		<result property="mtRgInspectCnt" column="MT_RG_INSPECT_CNT"/>
		<result property="mtImCd" column="MT_IM_CD"/>
		<result property="mtSbCtYn" column="MT_SB_CT_YN"/>
		<result property="gbYn" column="GB_YN"/>
		<result property="mtSaleEmpKey" column="MT_SALE_EMP_KEY"/>
		<result property="saleEmpNm" column="SALE_EMP_NM"/>
		<result property="mtMngEmpKey" column="MT_MNG_EMP_KEY"/>
		<result property="mngEmpNm" column="MNG_EMP_NM"/>
		<result property="mtSupportEmpKey" column="MT_SUPPORT_EMP_KEY"/>
		<result property="supportEmpNm" column="SUPPORT_EMP_NM"/>
		<result property="mtAmount" column="MT_AMOUNT"/>
		<result property="taxYn" column="TAX_YN"/>		
		<result property="mtPayTerms" column="MT_PAY_TERMS"/>
		<result property="remark" column="REMARK"/>
		<result property="deleteYn" column="DELETE_YN"/>
		<result property="regDt" column="REG_DT"/>
		<result property="regTm" column="REG_TM"/>
		<result property="regEmpKey" column="REG_EMP_KEY"/>
		<result property="modDt" column="MOD_DT"/>
		<result property="modTm" column="MOD_TM"/>
		<result property="modEmpKey" column="MOD_EMP_KEY"/>
	</resultMap>
	
	<!-- 유지보수 기본정보 등록 -->
	<insert id="writeContractBasic" parameterType="com.cep.maintenance.contract.vo.MtContractVO">
		INSERT INTO MT_CONTRACT_TB (
			MT_INTEGRATE_KEY
			, MT_CT_KEY
			, MT_SEQ
			, MT_AC_KEY
			, MT_AC_DIRECTOR_KEY
			, MT_NM
			, MT_CT_DT
			, MT_START_DT
			, MT_END_DT
			, MT_RG_INSPECT_CNT
			, MT_IM_CD
			, MT_SB_CT_YN
			, GB_YN
			, MT_SALE_EMP_KEY
			, MT_MNG_EMP_KEY
			, MT_SUPPORT_EMP_KEY
			, MT_AMOUNT
			, TAX_YN
			, MT_PAY_TERMS
			, REMARK
			, REG_DT
			, REG_TM
			, REG_EMP_KEY
		) VALUES (
			#{mtIntegrateKey}
		<choose>
			<when test="mtSeq > 0">
		<!--
			연장계약인 경우 MT_CT_KEY가 존재함.
			MT_CT_KEY 키가 존재하는 경우    MT_SEQ+1을 해서 등록한다..
		-->
			, #{mtCtKey}
			, (SELECT MAX(MT_SEQ) + 1 FROM MT_CONTRACT_TB WHERE MT_CT_KEY=#{mtCtKey})
			
			</when>
			<otherwise>
		<!-- 신규 유지보수 정보를 등록하는 경우.-->
			, #{mtCtKey}
			, 1						
			</otherwise>
		</choose>
			, #{mtAcKey}
			, #{mtAcDirectorKey}
			, #{mtNm}
			, #{mtCtDt}
			, #{mtStartDt}
			, #{mtEndDt}
			, #{mtRgInspectCnt}
			, #{mtImCd}
			, #{mtSbCtYn}
			, #{gbYn}
			, #{mtSaleEmpKey}
			, #{mtMngEmpKey}
			, #{mtSupportEmpKey}
			, #{mtAmount}
			, #{taxYn}
			, #{mtPayTerms}
			, #{remark}
			, DATE_FORMAT(NOW(),'%Y%m%d')
			, DATE_FORMAT(NOW(),'%k%i%s')
			, #{regEmpKey}
		);	
	</insert>
	
	<!--유지보수계약 기본정보 수정  -->
	<update id="updateMtContractBasic" parameterType="com.cep.maintenance.contract.vo.MtContractVO">
		UPDATE MT_CONTRACT_TB
		SET MT_AC_KEY= #{mtAcKey}
			, MT_AC_DIRECTOR_KEY = #{mtAcDirectorKey}
			, MT_NM = #{mtNm}
			, MT_CT_DT = #{mtCtDt}
			, MT_START_DT = #{mtStartDt}
			, MT_END_DT = #{mtEndDt}
			, MT_RG_INSPECT_CNT = #{mtRgInspectCnt}
			, MT_IM_CD = #{mtImCd}
			, MT_SB_CT_YN = #{mtSbCtYn}
			, GB_YN = #{gbYn}
			, MT_SALE_EMP_KEY = #{mtSaleEmpKey}
			, MT_MNG_EMP_KEY = #{mtMngEmpKey}
			, MT_SUPPORT_EMP_KEY = #{mtSupportEmpKey}
			, MT_AMOUNT = #{mtAmount}
			, TAX_YN = #{taxYn}
			, MT_PAY_TERMS = #{mtPayTerms}
			, REMARK = #{remark}
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey}
	</update>	
	
	<!--
		유지보수 목록 조회 쿼리
		날짜 조건이 없는 경우 (초기 검색) AND MT_CT_DT LIKE CONCAT(year(NOW()),'%') 검색하여 해당 년도를 검색한다.
	  -->
	<select id="selectMtContractList" parameterType="com.cep.maintenance.contract.vo.MtDefaultVO" resultMap="mtContractVO">				
		
		SELECT @rownum:=@rownum+1 AS ROW_NUM , M.* 
		FROM (
			SELECT MC.MT_CT_KEY
				, MC.MT_INTEGRATE_KEY
				, MC.MT_AC_KEY
				, CA.AC_NM AS MT_AC_NM
				, MC.MT_NM
				, MC.MT_CT_DT
				, MC.MT_START_DT
				, MC.MT_END_DT
				, MC.MT_RG_INSPECT_CNT
				, MC.MT_IM_CD
				, MC.MT_SB_CT_YN
				, (SELECT EMP_NM FROM CMM_EMPLOYEE_TB WHERE EMP_KEY= MC.MT_SALE_EMP_KEY) AS SALE_EMP_NM
				, (SELECT EMP_NM FROM CMM_EMPLOYEE_TB WHERE EMP_KEY= MC.MT_MNG_EMP_KEY) AS MNG_EMP_NM
				, (SELECT EMP_NM FROM CMM_EMPLOYEE_TB WHERE EMP_KEY= MC.MT_SUPPORT_EMP_KEY) AS SUPPORT_EMP_NM
			FROM MT_CONTRACT_TB MC, CMM_ACCOUNT_TB CA, (SELECT @ROWNUM := 0) AS R
			WHERE 1=1	
				<if test="(fromDate == null or fromDate == '') and (toDate == null or toDate == '')">
				AND MT_CT_DT LIKE CONCAT(year(NOW()),'%')
					<!-- <if test="toDate == null or toDate == ''">
						AND MT_CT_DT LIKE CONCAT(year(NOW()),'%')
					</if> -->
				</if>
				<if test="fromDate != null and fromDate != ''">
					AND MT_CT_DT >= #{fromDate}
				</if>
				<if test="toDate != null and toDate != ''">
				<![CDATA[
					AND MT_CT_DT <= #{toDate}
					]]>
				</if>
				<if test="searchSaleEmpKey != null and searchSaleEmpKey != ''">
					AND MT_SALE_EMP_KEY = #{searchSaleEmpKey}
				</if>
				<if test="searchMtName != null and searchMtName != ''">
					AND MT_NM LIKE CONCAT(#{searchMtName}, '%')
				</if>
			  	AND MC.MT_AC_KEY = CA.AC_KEY
			  	AND DELETE_YN='N'
			  	ORDER BY MT_CT_DT DESC
		) M			
		
	</select>
	
	<!-- 기본정보 상세보기 -->
	<select id="selectMtBasicDetail" parameterType="String" resultMap="mtContractVO">		
		SELECT MC.MT_CT_KEY
			, MC.MT_INTEGRATE_KEY
			, MC.MT_AC_KEY
			, CA.AC_NM AS MT_AC_NM
      		, MC.MT_AC_DIRECTOR_KEY
      		, AC_DIRECTOR_NM AS MT_AC_DIRECTOR_NM
			, CONCAT(AC_DIRECTOR_POSITION_NM , ' / ' , AC_DIRECTOR_MB_NUM , ' / ' , AC_DIRECTOR_EMAIL) AS AC_DIRECTOR_INFO
			, MC.MT_NM
			, MC.MT_CT_DT
			, MC.MT_START_DT
			, MC.MT_END_DT
			, MC.MT_RG_INSPECT_CNT
			, MC.MT_IM_CD
			, MC.MT_SB_CT_YN
			, MC.GB_YN
			, MC.MT_AMOUNT
			, MC.TAX_YN
			, MC.MT_PAY_TERMS
			, MC.REMARK
			, MC.MT_SALE_EMP_KEY
			, (SELECT EMP_NM FROM CMM_EMPLOYEE_TB WHERE EMP_KEY= MC.MT_SALE_EMP_KEY) AS SALE_EMP_NM
			, MC.MT_MNG_EMP_KEY
			, (SELECT EMP_NM FROM CMM_EMPLOYEE_TB WHERE EMP_KEY= MC.MT_MNG_EMP_KEY) AS MNG_EMP_NM
			, MC.MT_SUPPORT_EMP_KEY
			, (SELECT EMP_NM FROM CMM_EMPLOYEE_TB WHERE EMP_KEY= MC.MT_SUPPORT_EMP_KEY) AS SUPPORT_EMP_NM
		FROM MT_CONTRACT_TB MC, CMM_ACCOUNT_TB CA, CMM_ACCOUNT_DIRECTOR_TB AD
		WHERE MC.MT_INTEGRATE_KEY=#{mtIntegrateKey}			
		  	AND MC.MT_AC_KEY = CA.AC_KEY		
		  	AND MC.MT_AC_KEY = AD.AC_KEY			
		  	AND MC.MT_AC_DIRECTOR_KEY = AD.AC_DIRECTOR_KEY
		  	AND DELETE_YN='N';
	</select>
	
	<!-- 
		유지보수 계약 삭제 ==> DELETE_YN값을 Y로 바꾼다.
		1) 유지보수 목록에서 삭제
	 -->
	<update id="deleteMtContract">
			UPDATE MT_CONTRACT_TB
			SET DELETE_YN='Y'
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey}
	</update>
	
	<!-- 유지보수계약 단계별 등록 갯수 조회 -->
	<select id="selectMtContractCount" parameterType="String" resultType="egovMap">			
		SELECT 
		  (SELECT COUNT(1) FROM MT_PRODUCT_TB WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey} AND DELETE_YN='N') AS MT_PRODUCT_CNT
		  , (SELECT COUNT(1) FROM MT_SALES_AMOUNT_TB WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey} AND DELETE_YN='N') AS MT_SALES_AMOUNT_CNT
		  , (SELECT COUNT(1) FROM MT_BACK_ORDER_TB WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey} AND DELETE_YN='N') AS MT_BACK_ORDER_CNT
		  , (SELECT COUNT(1) FROM MT_BUY_AMOUNT_TB WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey} AND DELETE_YN='N') AS MT_BUY_AMOUT_CNT	
	</select>
	<!-- ===========================유지보수 계약 제품========================================= -->
	
	<!-- 유지보수계약 제품정보 등록. -->
	<insert id="writeMtContractProductList" parameterType="java.util.Map">
		
		INSERT INTO MT_PRODUCT_TB (
			MT_INTEGRATE_KEY 
			, MT_PM_FK_KEY
		    , MT_PM_DETAIL 
		    , MT_PM_SERIAL_NUM 
		    , MT_PM_QUANTITY 
		    , MT_PM_UPRICE 
		    , MT_PM_START_DT 
		    , MT_PM_END_DT 
		    , REMARK 
		    , DELETE_YN 
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY
		    )
		VALUES
		<foreach collection="mtContractProductVoList" item="item" separator=",">
		    (
		     #{mtIntegrateKey}
		    , #{item.mtPmFkKey}
		    , #{item.mtPmDetail} 
		    , #{item.mtPmSerialNum}
		    , #{item.mtPmQuantity}
		    , #{item.mtPmUprice}
		    , #{item.mtPmStartDt}
		    , #{item.mtPmEndDt} 
		    , #{item.remark} 
		    , 'N' 
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%k%i%s')
		    , #{regEmpKey} 
		   )
		</foreach>  		
	</insert>
	
		<!-- 유지보수계약별  제품목록 트회 -->
	<select id="selectMtContractProductList" parameterType="com.cep.maintenance.contract.vo.MtDefaultVO" resultType="egovMap">			
		SELECT
		  	MP.MT_PM_KEY
		  	, MP.MT_PM_FK_KEY
		  	, PM.PM_NM_CD
		  	, MP.MT_PM_DETAIL
		  	, MP.MT_PM_SERIAL_NUM
		  	, MP.MT_PM_QUANTITY
		  	, MP.MT_PM_UPRICE
		  	, MP.MT_PM_START_DT
		  	, MP.MT_PM_END_DT
		  	, MP.REMARK
		FROM MT_PRODUCT_TB MP, PM_PRODUCT_MNG_TB PM
		WHERE MP.MT_PM_FK_KEY = PM.PM_KEY
			AND MP.MT_INTEGRATE_KEY = #{selectIntegrateKey}
			AND MP.DELETE_YN = 'N'
		<if test="searchPmNmCd != null and searchPmNmCd != ''">
			AND PM.PM_NM_CD LIKE CONCAT(#{searchPmNmCd}, '%')
		</if>
		<if test="searchSerialNum != null and searchSerialNum != ''">
			AND MP.MT_PM_SERIAL_NUM LIKE CONCAT(#{searchSerialNum}, '%')
		</if>
			
	</select>
	
	<!-- 유지보수계약 제품 총금액을 가져온다. -->
	<select id="selectMtPmTotalAmount" parameterType="String" resultType="int">			
		SELECT
		  	IFNULL(SUM(MT_PM_QUANTITY * MT_PM_UPRICE),0) AS MT_PM_TOTAL_AMOUNT
		FROM MT_PRODUCT_TB MP
		WHERE MT_INTEGRATE_KEY = #{mtIntegrateKey}
			AND DELETE_YN = 'N'
	</select>
	
	<!-- 유지보수계약별 제품 전체삭제 -->
	<update id="deleteMtContractProductAll" parameterType="java.util.HashMap">
		UPDATE MT_PRODUCT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey}
	</update>
	
		<!-- 유지보수계약별  제품목록 리스트삭제 -->
	<update id="deleteMtContractProductList" parameterType="java.util.HashMap">	
		UPDATE MT_PRODUCT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_PM_KEY IN
			<foreach collection="deleteKeyList" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>		
	</update>
	
	
	<!-- 유지보수계약별 제품목록 정보수정 -->
	<update id="updateMtContractProductList" parameterType="java.util.HashMap">	
		<foreach collection="mtContractProductVoList" item="item" separator=";" close=";">
			UPDATE MT_PRODUCT_TB
			SET MT_PM_FK_KEY = #{item.mtPmFkKey}
				, MT_PM_DETAIL = #{item.mtPmDetail}
				, MT_PM_SERIAL_NUM = #{item.mtPmSerialNum}
				, MT_PM_QUANTITY = #{item.mtPmQuantity}
				, MT_PM_UPRICE = #{item.mtPmUprice}
				, MT_PM_START_DT = #{item.mtPmStartDt}
				, MT_PM_END_DT = #{item.mtPmEndDt}
				, REMARK = #{item.remark}
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_PM_KEY = #{item.mtPmKey} 
		
		</foreach>
	</update>	
	
	<!-- ===========================유지보수 계약 매출========================================= -->

	<!-- 매출등록화면에서 보여주는 기본정보.  -->
	<select id="selectContractAmountInfo" parameterType="String" resultType="egovMap">			
		SELECT 
		  	MC.MT_START_DT
		  	, MC.MT_END_DT
		  	, MC.MT_AMOUNT
		  	, MIN(MP.MT_PM_START_DT) AS MT_PM_START_DT
		  	, MAX(MP.MT_PM_END_DT) AS MT_PM_END_DT
		  	, SUM(MP.MT_PM_QUANTITY * MP.MT_PM_UPRICE) AS MT_PM_TOTAL_AMOUNT
		FROM MT_CONTRACT_TB MC, MT_PRODUCT_TB MP  
		WHERE MC.MT_INTEGRATE_KEY = #{mtIntegrateKey}	
			AND MC.DELETE_YN = 'N'
      		AND MP.DELETE_YN = 'N'      
		  	AND MC.MT_INTEGRATE_KEY = MP.MT_INTEGRATE_KEY;	
	</select>		
	
	<!-- 유지보수계약 매출총금액 -->
	<select id="selectMtSalesTotalAmount" parameterType="String" resultType="int">			
		SELECT
			IFNULL(SUM(MT_SALES_JAN_AMOUNT 
			+ MT_SALES_FEB_AMOUNT 
			+ MT_SALES_MAR_AMOUNT 
			+ MT_SALES_APR_AMOUNT 
			+ MT_SALES_MAY_AMOUNT 
			+ MT_SALES_JUN_AMOUNT 
			+ MT_SALES_JUL_AMOUNT 
			+ MT_SALES_AUG_AMOUNT 
			+ MT_SALES_SEP_AMOUNT  
			+ MT_SALES_OCT_AMOUNT  
			+ MT_SALES_NOV_AMOUNT 
			+ MT_SALES_DEC_AMOUNT),0) AS  MT_SALES_TOTAL_AMOUNT 
		FROM MT_SALES_AMOUNT_TB 
		WHERE MT_INTEGRATE_KEY = #{mtIntegrateKey}
		AND DELETE_YN = 'N'
	</select>	
	
	
	<!-- 유지보수계약 매출금액 등록 -->
	<insert id="writeMtContractSalesAmountList" parameterType="java.util.Map">
		INSERT INTO MT_SALES_AMOUNT_TB (
		    MT_INTEGRATE_KEY 
		    , MT_SALES_KEY 
		    , MT_SALES_YEAR 
		    , MT_SALES_JAN_AMOUNT 
		    , MT_SALES_FEB_AMOUNT 
		    , MT_SALES_MAR_AMOUNT 
		    , MT_SALES_APR_AMOUNT 
		    , MT_SALES_MAY_AMOUNT 
		    , MT_SALES_JUN_AMOUNT 
		    , MT_SALES_JUL_AMOUNT 
		    , MT_SALES_AUG_AMOUNT 
		    , MT_SALES_SEP_AMOUNT  
		    , MT_SALES_OCT_AMOUNT  
		    , MT_SALES_NOV_AMOUNT 
		    , MT_SALES_DEC_AMOUNT 
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY)
		VALUES
		<foreach collection="mtSalesAmountVOList" item="item" separator=",">
		    (
		    #{mtIntegrateKey} 
		    , (SELECT IFNULL(MAX(a.MT_SALES_KEY) + 1, 1) FROM MT_SALES_AMOUNT_TB a WHERE a.MT_INTEGRATE_KEY=#{mtIntegrateKey}) 
		    , #{item.mtSalesYear}
		    , #{item.mtSalesJanAmount}
		    , #{item.mtSalesFebAmount}
		    , #{item.mtSalesMarAmount}
		    , #{item.mtSalesAprAmount}
		    , #{item.mtSalesMayAmount}
		    , #{item.mtSalesJunAmount}
		    , #{item.mtSalesJulAmount}
		    , #{item.mtSalesAugAmount}
		    , #{item.mtSalesSepAmount}
		    , #{item.mtSalesOctAmount}
		    , #{item.mtSalesNovAmount}
		    , #{item.mtSalesDecAmount}
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%k%i%s')
		    , #{regEmpKey})
		</foreach>    		
	</insert>
	
	<!-- 유지보수계약 매출정보 목록 조회 -->
	<select id="selectMtContractSalesAmountList" parameterType="String" resultType="egovMap">			
		SELECT 
			MT_INTEGRATE_KEY 
			, MT_SALES_KEY 
			, MT_SALES_YEAR 
			, IFNULL(MT_SALES_JAN_AMOUNT, 0) AS MT_SALES_JAN_AMOUNT
			, IFNULL(MT_SALES_FEB_AMOUNT, 0) AS MT_SALES_FEB_AMOUNT
			, IFNULL(MT_SALES_MAR_AMOUNT, 0) AS MT_SALES_MAR_AMOUNT
			, IFNULL(MT_SALES_APR_AMOUNT, 0) AS MT_SALES_APR_AMOUNT
			, IFNULL(MT_SALES_MAY_AMOUNT, 0) AS MT_SALES_MAY_AMOUNT
			, IFNULL(MT_SALES_JUN_AMOUNT, 0) AS MT_SALES_JUN_AMOUNT
			, IFNULL(MT_SALES_JUL_AMOUNT, 0) AS MT_SALES_JUL_AMOUNT
			, IFNULL(MT_SALES_AUG_AMOUNT, 0) AS MT_SALES_AUG_AMOUNT
			, IFNULL(MT_SALES_SEP_AMOUNT, 0) AS MT_SALES_SEP_AMOUNT
			, IFNULL(MT_SALES_OCT_AMOUNT, 0) AS MT_SALES_OCT_AMOUNT
			, IFNULL(MT_SALES_NOV_AMOUNT, 0) AS MT_SALES_NOV_AMOUNT
			, IFNULL(MT_SALES_DEC_AMOUNT, 0) AS MT_SALES_DEC_AMOUNT
			, MT_SALES_JAN_CALL_YN
			, MT_SALES_FEB_CALL_YN 
			, MT_SALES_MAR_CALL_YN 
			, MT_SALES_APR_CALL_YN 
			, MT_SALES_MAY_CALL_YN 
			, MT_SALES_JUN_CALL_YN 
			, MT_SALES_JUL_CALL_YN 
			, MT_SALES_AUG_CALL_YN 
			, MT_SALES_SEP_CALL_YN  
			, MT_SALES_OCT_CALL_YN  
			, MT_SALES_NOV_CALL_YN 
			, MT_SALES_DEC_CALL_YN
		FROM MT_SALES_AMOUNT_TB
		WHERE MT_INTEGRATE_KEY = #{mtIntegrateKey}
			AND DELETE_YN='N'
		ORDER BY MT_SALES_YEAR
	</select>	
	
	<!-- 유지보수계약별 매출목록 정보수정 -->
	<update id="updateMtContractSalesAmountList" parameterType="java.util.HashMap">	
		<foreach collection="mtSalesAmountVOList" item="item" separator=";" close=";">
			UPDATE MT_SALES_AMOUNT_TB
			SET MT_SALES_YEAR = #{item.mtSalesYear}
				, MT_SALES_JAN_AMOUNT = #{item.mtSalesJanAmount}
			<if test="item.mtSalesJanCallYn != null and item.mtSalesJanCallYn != ''">	
				, MT_SALES_JAN_CALL_YN = #{item.mtSalesJanCallYn}
			</if>	
				, MT_SALES_FEB_AMOUNT = #{item.mtSalesFebAmount}
			<if test="item.mtSalesFebCallYn != null and item.mtSalesFebCallYn != ''">	
				, MT_SALES_FEB_CALL_YN = #{item.mtSalesFebCallYn}
			</if>	
				, MT_SALES_MAR_AMOUNT = #{item.mtSalesMarAmount}
			<if test="item.mtSalesMarCallYn != null and item.mtSalesMarCallYn != ''">	
				, MT_SALES_MAR_CALL_YN = #{item.mtSalesMarCallYn}
			</if>	
				, MT_SALES_APR_AMOUNT = #{item.mtSalesAprAmount}
			<if test="item.mtSalesAprCallYn != null and item.mtSalesAprCallYn != ''">	
				, MT_SALES_APR_CALL_YN = #{item.mtSalesAprCallYn}
			</if>	
				, MT_SALES_MAY_AMOUNT = #{item.mtSalesMayAmount}
			<if test="item.mtSalesMayCallYn != null and item.mtSalesMayCallYn != ''">	
				, MT_SALES_MAY_CALL_YN = #{item.mtSalesMayCallYn}
			</if>	
				, MT_SALES_JUN_AMOUNT = #{item.mtSalesJunAmount}
			<if test="item.mtSalesJanCallYn != null and item.mtSalesJunCallYn != ''">	
				, MT_SALES_JUN_CALL_YN = #{item.mtSalesJunCallYn}
			</if>	
				, MT_SALES_JUL_AMOUNT = #{item.mtSalesJulAmount}
			<if test="item.mtSalesJulCallYn != null and item.mtSalesJulCallYn != ''">	
				, MT_SALES_JUL_CALL_YN = #{item.mtSalesJulCallYn}
			</if>	
				, MT_SALES_AUG_AMOUNT = #{item.mtSalesAugAmount}
			<if test="item.mtSalesAugCallYn != null and item.mtSalesAugCallYn != ''">	
				, MT_SALES_AUG_CALL_YN = #{item.mtSalesAugCallYn}
			</if>	
				, MT_SALES_SEP_AMOUNT = #{item.mtSalesSepAmount}
			<if test="item.mtSalesSepCallYn != null and item.mtSalesSepCallYn != ''">	
				, MT_SALES_SEP_CALL_YN = #{item.mtSalesSepCallYn}
			</if>	
				, MT_SALES_OCT_AMOUNT = #{item.mtSalesOctAmount}
			<if test="item.mtSalesOctCallYn != null and item.mtSalesOctCallYn != ''">	
				, MT_SALES_OCT_CALL_YN = #{item.mtSalesOctCallYn}
			</if>	
				, MT_SALES_NOV_AMOUNT = #{item.mtSalesNovAmount}
			<if test="item.mtSalesNovCallYn != null and item.mtSalesNovCallYn != ''">	
				, MT_SALES_NOV_CALL_YN = #{item.mtSalesNovCallYn}
			</if>	
				, MT_SALES_DEC_AMOUNT = #{item.mtSalesDecAmount}
			<if test="item.mtSalesDecCallYn != null and item.mtSalesDecCallYn != ''">	
				, MT_SALES_DEC_CALL_YN = #{item.mtSalesDecCallYn}
			</if>	
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_SALES_KEY = #{item.mtSalesKey}
				AND MT_INTEGRATE_KEY =  #{mtIntegrateKey}					
		</foreach>
	</update>	
	
	<!-- 유지보수계약별 매출목록 전체삭제  -->	
	<update id="deleteMtContractSalesAmountAll" parameterType="java.util.HashMap">
		UPDATE MT_SALES_AMOUNT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey}
	</update>
	
	<!-- 유지보수계약별  매출목록 리스트삭제 -->
	<update id="deleteMtContractSalesAmountList" parameterType="java.util.HashMap">	
		UPDATE MT_SALES_AMOUNT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_INTEGRATE_KEY =  #{mtIntegrateKey}	
				AND MT_SALES_KEY IN
			<foreach collection="deleteKeyList" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
	</update>
	
	<!-- ===========================유지보수 계약 백계약 ========================================= -->
	
	<!-- 유지보수계약 백계약 등록 -->
	<insert id="writeContractBackOrder" parameterType="com.cep.maintenance.contract.vo.MtBackOrderVO">
	
		<!-- 유지보수계약 백계약 메인등록 -->
		INSERT INTO MT_BACK_ORDER_TB (
		    MT_ORDER_KEY 
		    , MT_INTEGRATE_KEY 
		    , MT_ORDER_AC_KEY 
		    , MT_ORDER_AC_DIRECTOR_KEY 
		    , MT_ORDER_PAY_TERMS 
		    , MT_ORDER_AMOUNT 
		    , TAX_YN 
		    , MT_ORDER_DT 
		    , REMARK 
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY
		) VALUES (
		    #{mtOrderKey} 
		    , #{mtIntegrateKey} 
		    , #{mtOrderAcKey}
		    , #{mtOrderAcDirectorKey}
		    , #{mtOrderPayTerms}
		    , #{mtOrderAmount}
		    , #{taxYn}
		    , #{mtOrderDt}
		    , #{remark}
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%k%i%s')
		    , #{regEmpKey}
		)				
	</insert>
	
	<insert id="writeContractBackOrderProduct" parameterType="java.util.HashMap">
				
		<!-- 유지보수계약 백계약 제품등록 -->
		INSERT INTO MT_BACK_ORDER_PRODUCT (
		    MT_ORDER_KEY 
		    , MT_PM_KEY 
		    , MT_ORDER_PM_QUANTITY 
		    , MT_ORDER_PM_UPRICE 
		    , MT_START_DT 
		    , MT_END_DT
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY)
		VALUES
		<foreach collection="mtBackOrderProductVoList" item="item" separator=",">
		    (
		    #{mtOrderKey} 
		    , #{item.mtPmKey} 
		    , #{item.mtOrderPmQuantity}
		    , #{item.mtOrderPmUprice}
		    , #{item.mtStartDt}
		    , #{item.mtEndDt}
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%k%i%s')
		    , #{regEmpKey})
		</foreach>    	
	</insert>
	
	<!-- 유지보수계약별 백계약 등록 리스트회 -->
	<select id="selectBackOrderSelectBoxList" parameterType="String" resultType="egovMap">			
		SELECT 
		  MB.MT_ORDER_KEY
		  , MB.MT_ORDER_AC_KEY
		  , CA.AC_NM AS MT_AC_NM
		FROM MT_BACK_ORDER_TB MB , CMM_ACCOUNT_TB CA
		WHERE MB.MT_INTEGRATE_KEY=#{mtIntegrateKey}
			AND MB.DELETE_YN='N'	
			AND MB.MT_ORDER_AC_KEY = CA.AC_KEY	
	</select>
	
	<!-- 유지보수계약별 백계약 메인상세 -->
	<select id="selectBackOrderDetail" parameterType="String" resultType="com.cep.maintenance.contract.vo.MtBackOrderVO">			
	<!-- <select id="selectBackOrderDetail" parameterType="String" resultType="egovMap"> -->
		SELECT 
			MB.MT_ORDER_KEY AS mtOrderKey
			, MB.MT_INTEGRATE_KEY AS mtIntegrateKey
			, MB.MT_ORDER_AC_KEY AS mtOrderAcKey
		  	, CA.AC_NM AS mtOrderAcKeyNm
			, MB.MT_ORDER_AC_DIRECTOR_KEY AS mtOrderAcDirectorKey
			, MB.MT_ORDER_PAY_TERMS AS mtOrderPayTerms
			, MB.MT_ORDER_AMOUNT AS mtOrderAmount
			, MB.TAX_YN AS taxYn
			, MB.MT_ORDER_DT AS mtOrderDt
			, MB.REMARK AS remark
		FROM MT_BACK_ORDER_TB MB , CMM_ACCOUNT_TB CA
		WHERE MT_ORDER_KEY = #{mtOrderKey} 
			AND DELETE_YN='N'  
		  	AND MB.MT_ORDER_AC_KEY = CA.AC_KEY
	</select>
	
	<!-- 유지보수계약별 백계약 목록조회 -->
	<select id="selectBackOrderList" parameterType="String" resultType="com.cep.maintenance.contract.vo.MtBackOrderVO">			
	<!-- <select id="selectBackOrderList" parameterType="String" resultType="egovMap"> -->	
		SELECT 
			MB.MT_ORDER_KEY AS mtOrderKey
			, MB.MT_INTEGRATE_KEY AS mtIntegrateKey
			, MB.MT_ORDER_AC_KEY AS mtOrderAcKey
		  	, CA.AC_NM AS mtOrderAcKeyNm
			, MB.MT_ORDER_AC_DIRECTOR_KEY AS mtOrderAcDirectorKey
      		, AD.AC_DIRECTOR_NM AS mtOrderAcDirectorNm
			, MB.MT_ORDER_PAY_TERMS AS mtOrderPayTerms
			, MB.MT_ORDER_AMOUNT AS mtOrderAmount
			, MB.TAX_YN AS taxYn
			, MB.MT_ORDER_DT AS mtOrderDt
			, MB.REMARK AS remark
		FROM MT_BACK_ORDER_TB MB , CMM_ACCOUNT_TB CA, CMM_ACCOUNT_DIRECTOR_TB AD
		WHERE MB.MT_INTEGRATE_KEY = #{mtIntegrateKey} 
			AND MB.DELETE_YN='N'  
		  	AND MB.MT_ORDER_AC_KEY = CA.AC_KEY
		  	AND MB.MT_ORDER_AC_KEY = AD.AC_KEY
		  	AND MB.MT_ORDER_AC_DIRECTOR_KEY = AD.AC_DIRECTOR_KEY
	</select>	
	
	
	<!-- 유지보수계약별 백계약 제품목록 -->
	<select id="selectBackOrderProductList" parameterType="String" resultType="com.cep.maintenance.contract.vo.MtBackOrderProductVO">			
	<!-- <select id="selectBackOrderProductList" parameterType="String" resultType="egovMap"> -->
		SELECT
			MB.MT_ORDER_PM_KEY AS mtOrderPmKey
			, MB.MT_ORDER_KEY AS mtOrderKey
			, MB.MT_PM_KEY AS mtPmKey
			, MB.MT_ORDER_PM_QUANTITY AS mtOrderPmQuantity
			, MB.MT_ORDER_PM_UPRICE AS mtOrderPmUprice
			, MB.MT_START_DT AS mtStartDt
			, MB.MT_END_DT AS mtEndDt
		  	, PM.PM_NM_CD AS mtPmKeyNm
		  	, MT.MT_PM_SERIAL_NUM AS mtPmSerialNum
		  	, MT.MT_PM_DETAIL AS mtPmDetail
		FROM MT_BACK_ORDER_PRODUCT MB, MT_PRODUCT_TB MT, PM_PRODUCT_MNG_TB PM
		WHERE MB.MT_ORDER_KEY = #{mtOrderKey}
			AND MB.DELETE_YN='N'
			AND MB.MT_PM_KEY = MT.MT_PM_KEY
			AND MT.MT_PM_FK_KEY = PM.PM_KEY
	</select>
	
	<!-- 유지보수계약별 백계약 삭제 -->
	<update id="deleteBackOrder" parameterType="java.util.HashMap">
		UPDATE MT_BACK_ORDER_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY=#{mtOrderKey}
	</update>
	
	<!-- 유지보수계약별 백계약별 제품목록 전체삭제 -->
	<update id="deleteBackOrderProductAll" parameterType="java.util.HashMap">
		UPDATE MT_BACK_ORDER_PRODUCT
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY=#{mtOrderKey}
	</update>
	
	<!-- 유지보수계약별 백계약별 제품목록 리스트삭제 -->
	<update id="deleteBackOrderProductList" parameterType="java.util.HashMap">	
		UPDATE MT_BACK_ORDER_PRODUCT
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_ORDER_PM_KEY IN
			<foreach collection="deleteKeyList" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>		
	</update>
	
	<!-- 유지보수계약별 백계약 정보수정 -->
	<update id="updateBackOrder" parameterType="com.cep.maintenance.contract.vo.MtBackOrderVO">	
		UPDATE MT_BACK_ORDER_TB
		SET MT_ORDER_AC_KEY = #{mtOrderAcKey}
			, MT_ORDER_AC_DIRECTOR_KEY = #{mtOrderAcDirectorKey}
			, MT_ORDER_PAY_TERMS = #{mtOrderPayTerms}
			, MT_ORDER_AMOUNT = #{mtOrderAmount}
			, TAX_YN = #{taxYn}
			, MT_ORDER_DT = #{mtOrderDt}
			, REMARK = #{remark}
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY = #{mtOrderKey} 
	</update>	
	
	
	<!-- 유지보수계약 백계약 제품리스트 정보수정. -->
	<update id="updateBackOrderProductList" parameterType="java.util.HashMap">
		<foreach collection="mtBackOrderProductVoList" item="item" separator=";" close=";">
			UPDATE MT_BACK_ORDER_PRODUCT
			SET MT_PM_KEY=#{item.mtPmKey} 
				, MT_ORDER_PM_QUANTITY = #{item.mtOrderPmQuantity}
				, MT_ORDER_PM_UPRICE = #{item.mtOrderPmUprice}
				, MT_START_DT = #{item.mtStartDt}
				, MT_END_DT = #{item.mtEndDt}
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_ORDER_PM_KEY = #{item.mtOrderPmKey}
		</foreach>
	</update>
	
	<!-- ===========================유지보수 계약 매입========================================= -->

	<!-- 매입등록화면에서 보여주는 기본정보.  -->
	<select id="selectMtBuyAmountRefer" parameterType="java.util.HashMap" resultType="egovMap">			
		SELECT 
			MC.MT_START_DT
			, MC.MT_END_DT
			, MC.MT_AMOUNT
			, MIN(MP.MT_START_DT) AS MT_ORDER_START_DT
			, MAX(MP.MT_END_DT) AS MT_ORDER_END_DT
			, MB.MT_ORDER_AMOUNT
			, MB.MT_ORDER_PAY_TERMS
			, MB.MT_ORDER_AC_KEY
		FROM MT_CONTRACT_TB MC, MT_BACK_ORDER_TB MB, MT_BACK_ORDER_PRODUCT MP
		WHERE MC.MT_INTEGRATE_KEY = #{mtIntegrateKey}
			AND MB.MT_ORDER_KEY = #{mtOrderKey} 
			AND MC.DELETE_YN = 'N'
			AND MB.DELETE_YN = 'N'
			AND MP.DELETE_YN = 'N'
			AND MC.MT_INTEGRATE_KEY = MB.MT_INTEGRATE_KEY
			AND MB.MT_ORDER_KEY = MP.MT_ORDER_KEY
		GROUP BY MB.MT_ORDER_AC_KEY
	</select>	
	
	<!-- 유지보수계약 업체별 매입총금액 -->
	<select id="selectMtBuyTotalAmount" parameterType="java.util.HashMap" resultType="int">			
		SELECT
			IFNULL(SUM(MT_BUY_JAN_AMOUNT 
			+ MT_BUY_FEB_AMOUNT 
			+ MT_BUY_MAR_AMOUNT 
			+ MT_BUY_APR_AMOUNT 
			+ MT_BUY_MAY_AMOUNT 
			+ MT_BUY_JUN_AMOUNT 
			+ MT_BUY_JUL_AMOUNT 
			+ MT_BUY_AUG_AMOUNT 
			+ MT_BUY_SEP_AMOUNT  
			+ MT_BUY_OCT_AMOUNT  
			+ MT_BUY_NOV_AMOUNT 
			+ MT_BUY_DEC_AMOUNT),0) AS  MT_BUY_TOTAL_AMOUNT 
		FROM MT_BUY_AMOUNT_TB 
		WHERE MT_INTEGRATE_KEY = #{mtIntegrateKey}
		<if test="mtOrderKey != null and mtOrderKey != ''">
			AND MT_ORDER_KEY = #{mtOrderKey}
		</if>
			AND DELETE_YN = 'N'
	</select>	
	
	<!-- 유지보수계약 매입금액 등록 -->
	<insert id="writeMtContractBuyAmountList" parameterType="java.util.Map">
		INSERT INTO MT_BUY_AMOUNT_TB (
		    MT_INTEGRATE_KEY 
		    , MT_BUY_KEY 
		    , MT_ORDER_KEY
		    , MT_BUY_YEAR 
		    , MT_BUY_JAN_AMOUNT 
		    , MT_BUY_FEB_AMOUNT 
		    , MT_BUY_MAR_AMOUNT 
		    , MT_BUY_APR_AMOUNT 
		    , MT_BUY_MAY_AMOUNT 
		    , MT_BUY_JUN_AMOUNT 
		    , MT_BUY_JUL_AMOUNT 
		    , MT_BUY_AUG_AMOUNT 
		    , MT_BUY_SEP_AMOUNT  
		    , MT_BUY_OCT_AMOUNT  
		    , MT_BUY_NOV_AMOUNT 
		    , MT_BUY_DEC_AMOUNT
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY)
		VALUES
		<foreach collection="mtBuyAmountVOList" item="item" separator=",">
		    (
		    #{mtIntegrateKey} 
		    , (SELECT IFNULL(MAX(a.MT_BUY_KEY) + 1, 1) FROM MT_BUY_AMOUNT_TB a WHERE a.MT_INTEGRATE_KEY=#{mtIntegrateKey} AND a.MT_ORDER_KEY=#{mtOrderKey}) 
		    , #{mtOrderKey}
		    , #{item.mtBuyYear}
		    , #{item.mtBuyJanAmount}
		    , #{item.mtBuyFebAmount}
		    , #{item.mtBuyMarAmount}
		    , #{item.mtBuyAprAmount}
		    , #{item.mtBuyMayAmount}
		    , #{item.mtBuyJunAmount}
		    , #{item.mtBuyJulAmount}
		    , #{item.mtBuyAugAmount}
		    , #{item.mtBuySepAmount}
		    , #{item.mtBuyOctAmount}
		    , #{item.mtBuyNovAmount}
		    , #{item.mtBuyDecAmount}
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%k%i%s')
		    , #{regEmpKey})
		</foreach>    		
	</insert>
	
	<!-- 유지보수계약 년도별 매입금액 목록 수정 -->
	<update id="updateMtContractBuyAmountList" parameterType="java.util.HashMap">
		<foreach collection="mtBuyAmountVoList" item="item" separator=";" close=";">
			UPDATE MT_BUY_AMOUNT_TB SET 
				MT_BUY_YEAR = #{item.mtBuyYear}
				, MT_BUY_JAN_AMOUNT = #{item.mtBuyJanAmount}
			<if test="item.mtBuyJanCallYn != null and item.mtBuyJanCallYn != ''">	
				, MT_BUY_JAN_CALL_YN = #{item.mtBuyJanCallYn}
			</if>	
				, MT_BUY_FEB_AMOUNT = #{item.mtBuyFebAmount}
			<if test="item.mtBuyFebCallYn != null and item.mtBuyFebCallYn != ''">	
				, MT_BUY_FEB_CALL_YN = #{item.mtBuyFebCallYn}
			</if>	
				, MT_BUY_MAR_AMOUNT = #{item.mtBuyMarAmount}
			<if test="item.mtBuyMarCallYn != null and item.mtBuyMarCallYn != ''">	
				, MT_BUY_MAR_CALL_YN = #{item.mtBuyMarCallYn}
			</if>	
				, MT_BUY_APR_AMOUNT = #{item.mtBuyAprAmount}
			<if test="item.mtBuyAprCallYn != null and item.mtBuyAprCallYn != ''">	
				, MT_BUY_APR_CALL_YN = #{item.mtBuyAprCallYn}
			</if>	
				, MT_BUY_MAY_AMOUNT = #{item.mtBuyMayAmount}
			<if test="item.mtBuyMayCallYn != null and item.mtBuyMayCallYn != ''">	
				, MT_BUY_MAY_CALL_YN = #{item.mtBuyMayCallYn}
			</if>	
				, MT_BUY_JUN_AMOUNT = #{item.mtBuyJunAmount}
			<if test="item.mtBuyJunCallYn != null and item.mtBuyJunCallYn != ''">	
				, MT_BUY_JUN_CALL_YN = #{item.mtBuyJunCallYn}
			</if>	
				, MT_BUY_JUL_AMOUNT = #{item.mtBuyJulAmount}
			<if test="item.mtBuyJulCallYn != null and item.mtBuyJulCallYn != ''">	
				, MT_BUY_JUL_CALL_YN = #{item.mtBuyJulCallYn}
			</if>	
				, MT_BUY_AUG_AMOUNT = #{item.mtBuyAugAmount}
			<if test="item.mtBuyAugCallYn != null and item.mtBuyAugCallYn != ''">	
				, MT_BUY_AUG_CALL_YN = #{item.mtBuyAugCallYn}
			</if>	
				, MT_BUY_SEP_AMOUNT = #{item.mtBuySepAmount}
			<if test="item.mtBuySepCallYn != null and item.mtBuySepCallYn != ''">	
				, MT_BUY_SEP_CALL_YN = #{item.mtBuySepCallYn}
			</if>	
				, MT_BUY_OCT_AMOUNT = #{item.mtBuyOctAmount}
			<if test="item.mtBuyOctCallYn != null and item.mtBuyOctCallYn != ''">	
				, MT_BUY_OCT_CALL_YN = #{item.mtBuyOctCallYn}
			</if>	
				, MT_BUY_NOV_AMOUNT = #{item.mtBuyNovAmount}
			<if test="item.mtBuyNovCallYn != null and item.mtBuyNovCallYn != ''">	
				, MT_BUY_NOV_CALL_YN = #{item.mtBuyNovCallYn}
			</if>	
				, MT_BUY_DEC_AMOUNT = #{item.mtBuyDecAmount}
			<if test="item.mtBuyDecCallYn != null and item.mtBuyDecCallYn != ''">	
				, MT_BUY_DEC_CALL_YN = #{item.mtBuyDecCallYn}
			</if>	
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_ORDER_KEY = #{mtOrderKey}
				AND MT_BUY_KEY = #{item.mtBuyKey}
				
		</foreach>	
	</update>
	
	<!-- 유지보수계약 년도별 매입금액 목록 삭제 -->
	<update id="deleteMtContractBuyAmountList" parameterType="java.util.HashMap">
		UPDATE MT_BUY_AMOUNT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_ORDER_KEY = #{mtOrderKey}
				AND MT_BUY_KEY IN
			<foreach collection="deleteKeyList" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
	</update>
	
	<!-- 유지보수계약 거래처별 매입금액 전체삭제 -->
	<update id="deleteMtContractBuyAmountAll" parameterType="java.util.HashMap">
		UPDATE MT_BUY_AMOUNT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%k%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
			WHERE 1=1				
			<if test="mtOrderKey != null and mtOrderKey != ''">
				AND MT_ORDER_KEY = #{mtOrderKey}
			</if>				
				AND MT_INTEGRATE_KEY = #{mtIntegrateKey}
				
	</update>
	
	<!-- 유지보수계약 년도별 매입금액 목록 조회  -->
	<select id="selectMtContractBuyAmountList" parameterType="java.util.HashMap" resultType="egovMap">
		SELECT
			MA.MT_INTEGRATE_KEY
			, MA.MT_BUY_KEY
			, MA.MT_ORDER_KEY
			, MO.MT_ORDER_PAY_TERMS
			, MO.MT_ORDER_AC_KEY AS MT_ORDER_AC_KEY
		  	, CA.AC_NM AS MT_ORDER_AC_NM
			, MA.MT_BUY_YEAR
			, IFNULL(MA.MT_BUY_JAN_AMOUNT, 0) AS MT_BUY_JAN_AMOUNT
			, MA.MT_BUY_JAN_CALL_YN
			, IFNULL(MA.MT_BUY_FEB_AMOUNT, 0) AS MT_BUY_FEB_AMOUNT
			, MA.MT_BUY_FEB_CALL_YN
			, IFNULL(MA.MT_BUY_MAR_AMOUNT, 0) AS MT_BUY_MAR_AMOUNT
			, MA.MT_BUY_MAR_CALL_YN
			, IFNULL(MA.MT_BUY_APR_AMOUNT, 0) AS MT_BUY_APR_AMOUNT
			, MA.MT_BUY_APR_CALL_YN
			, IFNULL(MA.MT_BUY_MAY_AMOUNT, 0) AS MT_BUY_MAY_AMOUNT
			, MA.MT_BUY_MAY_CALL_YN
			, IFNULL(MA.MT_BUY_JUN_AMOUNT, 0) AS MT_BUY_JUN_AMOUNT
			, MA.MT_BUY_JUN_CALL_YN
			, IFNULL(MA.MT_BUY_JUL_AMOUNT, 0) AS MT_BUY_JUL_AMOUNT
			, MA.MT_BUY_JUL_CALL_YN
			, IFNULL(MA.MT_BUY_AUG_AMOUNT, 0) AS MT_BUY_AUG_AMOUNT
			, MA.MT_BUY_AUG_CALL_YN
			, IFNULL(MA.MT_BUY_SEP_AMOUNT, 0) AS MT_BUY_SEP_AMOUNT
			, MA.MT_BUY_SEP_CALL_YN
			, IFNULL(MA.MT_BUY_OCT_AMOUNT, 0) AS MT_BUY_OCT_AMOUNT
			, MA.MT_BUY_OCT_CALL_YN
			, IFNULL(MA.MT_BUY_NOV_AMOUNT, 0) AS MT_BUY_NOV_AMOUNT
			, MA.MT_BUY_NOV_CALL_YN
			, IFNULL(MA.MT_BUY_DEC_AMOUNT, 0) AS MT_BUY_DEC_AMOUNT
			, MA.MT_BUY_DEC_CALL_YN
		FROM MT_BUY_AMOUNT_TB MA, MT_BACK_ORDER_TB MO, CMM_ACCOUNT_TB CA
		WHERE MA.MT_INTEGRATE_KEY = #{mtIntegrateKey}
		<if test="mtOrderKey != null and mtOrderKey != ''">
			AND MA.MT_ORDER_KEY = #{mtOrderKey}
		</if>
		<if test="mtBuyKey != 0 and mtBuyKey != null and mtBuyKey != ''and mtBuyKey != '0'">
			AND MA.MT_BUY_KEY = #{mtBuyKey}
		</if>
			AND MA.MT_ORDER_KEY = MO.MT_ORDER_KEY
			AND MO.MT_ORDER_AC_KEY = CA.AC_KEY
			AND MA.DELETE_YN = 'N'
			ORDER BY MO.MT_ORDER_AC_KEY, MA.MT_BUY_YEAR
	</select>
	
	
	<!-- ######################################################################  -->
	<!-- 사원리스트회 -->
	<select id="selectEmployeeList" resultType="egovMap">			
		SELECT EMP_KEY
			, EMP_NM
		FROM CMM_EMPLOYEE_TB
		ORDER BY EMP_NM		
	</select>
	
	<!-- 거래처 담당자 리스트회 -->
	<select id="selectAcDirectorList" parameterType="String" resultType="egovMap">			
			SELECT AC_DIRECTOR_KEY
				, AC_DIRECTOR_NM
				, CONCAT(AC_DIRECTOR_POSITION_NM , ' / ' , AC_DIRECTOR_MB_NUM , ' / ' , AC_DIRECTOR_EMAIL) AS AC_DIRECTOR_INFO
			FROM CMM_ACCOUNT_DIRECTOR_TB
			WHERE AC_KEY = #{acKey}
			ORDER BY AC_DIRECTOR_NM		
	</select>
	
	<select id="makePrimaryKey" parameterType="String" resultType="String">			
			SELECT make_key(#{keyType});
	</select>
	
	
</mapper>