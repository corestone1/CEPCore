<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cep.maintenance.work.service.impl.MtWorkMapper">
	<resultMap id="mtWorkVO" type="com.cep.maintenance.work.vo.MtWorkVO">
		<result property="mtIntegrateKey" column="MT_INTEGRATE_KEY"/>
		<result property="mtWorkKey" column="MT_WORK_KEY"/>
		<result property="mtWorkEmpKey" column="MT_WORK_EMP_KEY"/>
		<result property="mtWorkEmpNm" column="MT_WORK_EMP_NM"/>		
		<result property="mtNm" column="MT_NM"/>
		<result property="mtAcNm" column="MT_AC_NM"/>
		<result property="mtAcKey" column="MT_AC_KEY"/>
		<result property="mtWorkAcDirectorKey" column="MT_WORK_AC_DIRECTOR_KEY"/>
		<result property="acDirectorNm" column="AC_DIRECTOR_NM"/>		
		<result property="acDirectorInfo" column="AC_DIRECTOR_INFO"/>		
		<result property="mtWorkStartDt" column="MT_WORK_START_DT"/>
		<result property="mtWorkStartTm" column="MT_WORK_START_TM"/>
		<result property="mtWorkEndDt" column="MT_WORK_END_DT"/>
		<result property="mtWorkEndTm" column="MT_WORK_END_TM"/>
		<result property="mtWorkTypeCd" column="MT_WORK_TYPE_CD"/>
		<result property="mtWorkResultCd" column="MT_WORK_RESULT_CD"/>		
		<result property="mtWorkPmYn" column="MT_WORK_PM_YN"/>
		<result property="mtWorkOrderYn" column="MT_WORK_ORDER_YN"/>		
		<result property="mtWorkCont" column="MT_WORK_CONT"/>
		<result property="remark" column="REMARK"/>
		<result property="deleteYn" column="DELETE_YN"/>
		<result property="regDt" column="REG_DT"/>
		<result property="regTm" column="REG_TM"/>
		<result property="regEmpKey" column="REG_EMP_KEY"/>
		<result property="modDt" column="MOD_DT"/>
		<result property="modTm" column="MOD_TM"/>
		<result property="modEmpKey" column="MOD_EMP_KEY"/>
		<result property="modEmpKey" column="DELETE_YN"/>
	</resultMap>
	
	<resultMap id="mtWorkProductVO" type="com.cep.maintenance.work.vo.MtWorkProductVO">
		<result property="mtWorkKey" column="MT_WORK_KEY"/>
		<result property="mtWorkSeq" column="MT_WORK_SEQ"/>
		<result property="mtPmKey" column="MT_PM_KEY"/>
		<result property="mtPmKeyNm" column="MT_PM_KEY_NM"/>
		<result property="mtPmDetail" column="MT_PM_DETAIL"/>
		<result property="mtPmSerialNum" column="MT_PM_SERIAL_NUM"/>
		<result property="mtPmWorkCont" column="MT_PM_WORK_CONT"/>
	</resultMap>
	<!-- 유지보수작업 기본정보 등록 -->
	<insert id="writeWorkBasic" parameterType="com.cep.maintenance.work.vo.MtWorkVO">
		INSERT INTO MT_WORK_TB (
		    MT_WORK_KEY
		    , MT_INTEGRATE_KEY 
		    , MT_WORK_EMP_KEY 
		    , MT_WORK_AC_DIRECTOR_KEY 
		    , MT_WORK_START_DT 
		    , MT_WORK_START_TM 
		    , MT_WORK_END_DT
		    , MT_WORK_END_TM 
		    , MT_WORK_TYPE_CD
		    , MT_WORK_RESULT_CD
		    , MT_WORK_CONT
		    , MT_WORK_PM_YN
		    , MT_WORK_ORDER_YN
		    , REMARK
		    , REG_DT
		    , REG_TM
		    , REG_EMP_KEY
		    , DELETE_YN
		) VALUES (
		    #{mtWorkKey} 
		    , #{mtIntegrateKey}
		    , #{mtWorkEmpKey}
		    , #{mtWorkAcDirectorKey}
		    , #{dbWorkStartDt}
		    , #{dbWorkStartTm}
		    , #{dbWorkEndDt}
		    , #{dbWorkEndTm}
		    , #{mtWorkTypeCd}
		    , #{mtWorkResultCd}
		    , #{mtWorkCont}
		    , #{mtWorkPmYn}
		    , #{mtWorkOrderYn}
		    , #{remark}
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%H%i%s')
		    , #{regEmpKey} 
		    , 'N'
		);
	</insert>
	<!-- 유지보수 작업 기본정보 업데이트 -->
	<update id="updateWorkBasic" parameterType="com.cep.maintenance.work.vo.MtWorkVO">
		UPDATE MT_WORK_TB
		SET
			MT_WORK_EMP_KEY = #{mtWorkEmpKey}
			, MT_WORK_AC_DIRECTOR_KEY = #{mtWorkAcDirectorKey}
			, MT_WORK_START_DT = #{dbWorkStartDt}
			, MT_WORK_START_TM = #{dbWorkStartTm} 
			, MT_WORK_END_DT = #{dbWorkEndDt} 
			, MT_WORK_END_TM = #{dbWorkEndTm} 
			, MT_WORK_TYPE_CD = #{mtWorkTypeCd}
			, MT_WORK_RESULT_CD = #{mtWorkResultCd} 
			, MT_WORK_CONT = #{mtWorkCont} 
			, MT_WORK_PM_YN = #{mtWorkPmYn} 
			, MT_WORK_ORDER_YN = #{mtWorkOrderYn} 
			, REMARK = #{remark}
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d') 
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_WORK_KEY = #{mtWorkKey};
	</update>
	<!--
		유지보수 작업 목록
		리스트에서 모든 정보가 보여지기 때문에 모든정보를 불러온다.
	  -->
	<select id="selectWorkList" parameterType="com.cep.maintenance.contract.vo.MtDefaultVO"  resultMap="mtWorkVO">				
		
		SELECT
		  	MW.MT_WORK_KEY
		  	, MW.MT_INTEGRATE_KEY
		  	, CA.AC_NM AS MT_AC_NM
		  	, MC.MT_NM
		  	, MW.MT_WORK_EMP_KEY
		  	, CE.EMP_NM AS MT_WORK_EMP_NM
		  	, MW.MT_WORK_AC_DIRECTOR_KEY
		    , AD.AC_DIRECTOR_NM 
		    , CONCAT(AD.AC_DIRECTOR_POSITION_NM , ' / ' , AD.AC_DIRECTOR_MB_NUM) AS AC_DIRECTOR_INFO
		  	, MW.MT_WORK_START_DT
		  	, MW.MT_WORK_END_DT
		  	, MW.MT_WORK_TYPE_CD
		  	, MW.MT_WORK_RESULT_CD
		  FROM MT_WORK_TB MW
		    , MT_CONTRACT_TB MC
		    , CMM_ACCOUNT_TB CA
		    , CMM_EMPLOYEE_TB CE
		    , CMM_ACCOUNT_DIRECTOR_TB AD
		  WHERE 1=1	
		<if test="fromDate != null and fromDate != ''">
			AND MW.MT_WORK_START_DT >= #{fromDate}
		</if>
		<if test="toDate != null and toDate != ''">
			<![CDATA[
			AND MW.MT_WORK_START_DT <= #{toDate}
			]]>
		</if>
		<if test="searchWorkEmpNm != null and searchWorkEmpNm != ''">
			AND CE.EMP_NM LIKE CONCAT('%', #{searchWorkEmpNm}, '%')
		</if>
		<if test="searchWorkResult != null and searchWorkResult != ''">
			AND MW.MT_WORK_RESULT_CD = #{searchWorkResult}
		</if>
		<if test="searchWord != null and searchWord != '' and searchGubun =='PJ'">					
			AND MC.MT_NM LIKE CONCAT('%', #{searchWord}, '%')
		</if>
		<if test="searchWord != null and searchWord != '' and searchGubun =='CU'">					
			AND CA.AC_NM LIKE CONCAT('%', #{searchWord}, '%')
		</if>		
			AND MW.DELETE_YN='N'
			AND MC.DELETE_YN='N'
		    AND MW.MT_INTEGRATE_KEY = MC.MT_INTEGRATE_KEY
		    AND MC.MT_AC_KEY = CA.AC_KEY
		    AND MW.MT_WORK_EMP_KEY = CE.EMP_KEY
		    AND MW.MT_WORK_AC_DIRECTOR_KEY = AD.AC_DIRECTOR_KEY
		  ORDER BY MT_WORK_START_DT DESC, AC_NM, MT_NM 
	</select>
	<!--
		유지보수 작업 상세보기
	  -->
	<select id="selectWorkDetail" parameterType="String" resultMap="mtWorkVO">				
		
		SELECT
		  	MW.MT_WORK_KEY
		  	, MW.MT_INTEGRATE_KEY
		  	, CA.AC_NM AS MT_AC_NM
		  	, MC.MT_AC_KEY
		  	, MC.MT_NM
		  	, MW.MT_WORK_EMP_KEY
		  	, CE.EMP_NM AS MT_WORK_EMP_NM
		  	, MW.MT_WORK_AC_DIRECTOR_KEY
		    , AD.AC_DIRECTOR_NM 
		    , CONCAT(AD.AC_DIRECTOR_POSITION_NM , ' / ' , AD.AC_DIRECTOR_MB_NUM, ' / ' , AD.AC_DIRECTOR_EMAIL) AS AC_DIRECTOR_INFO
		  	, MW.MT_WORK_START_DT
		  	, MW.MT_WORK_START_TM
		  	, MW.MT_WORK_END_DT
		  	, MW.MT_WORK_END_TM
		  	, MW.MT_WORK_TYPE_CD
		  	, MW.MT_WORK_RESULT_CD
        	, MW.MT_WORK_PM_YN
        	, MW.MT_WORK_ORDER_YN
		  	, MW.MT_WORK_CONT
		  	, MW.REMARK
		  FROM MT_WORK_TB MW
		    , MT_CONTRACT_TB MC
		    , CMM_ACCOUNT_TB CA
		    , CMM_EMPLOYEE_TB CE
		    , CMM_ACCOUNT_DIRECTOR_TB AD
		  WHERE MW.MT_WORK_KEY=#{mtWorkKey}						
			AND MW.DELETE_YN='N'
		    AND MW.MT_INTEGRATE_KEY = MC.MT_INTEGRATE_KEY
		    AND MC.MT_AC_KEY = CA.AC_KEY
		    AND MW.MT_WORK_EMP_KEY = CE.EMP_KEY
		    AND MW.MT_WORK_AC_DIRECTOR_KEY = AD.AC_DIRECTOR_KEY
		  ORDER BY MT_WORK_START_DT DESC, AC_NM 
	</select>
		
		<!-- 
		유지보수 작업 삭제 ==> DELETE_YN값을 Y로 바꾼다.
		1) 유지보수 작업목록에서 삭제 기능
	 -->
	<update id="deleteMtWork" parameterType="com.cep.maintenance.work.vo.MtWorkVO">
			UPDATE MT_WORK_TB
			SET DELETE_YN='Y'
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_WORK_KEY=#{mtWorkKey}
	</update>
	
	<!-- ===========================유지보수작업 제품정보========================================= -->

	
	<!-- 유지보수작업 제품정보 등록. -->
	<insert id="writeWorkProductList" parameterType="java.util.HashMap">
		
			INSERT INTO MT_WORK_PRODUCT_TB (
				MT_WORK_KEY 
				, MT_WORK_SEQ
			    , MT_PM_KEY 
			    , MT_PM_WORK_CONT 
			    , DELETE_YN 
			    , REG_DT 
			    , REG_TM 
			    , REG_EMP_KEY
			    )
			VALUES
			<foreach collection="mtWorkProductVoList" item="item" separator=",">
			    (
			     #{mtWorkKey}
			    , (SELECT IFNULL(MAX(a.MT_WORK_SEQ) + 1, 1) FROM MT_WORK_PRODUCT_TB a WHERE a.MT_WORK_KEY=#{mtWorkKey})
			    , #{item.mtPmKey} 
			    , #{item.mtPmWorkCont}  
			    , 'N' 
			    , DATE_FORMAT(NOW(),'%Y%m%d')
			    , DATE_FORMAT(NOW(),'%H%i%s')
			    , #{regEmpKey} 
			   )
			</foreach>  		
	</insert>
	<!-- 유지보수작업 제품정보 목록조회 (추후 유지보수계약 제품목록과 MT_PM_KEY를 이용하여  제품시리얼번호를 가져와야함. 
	         제품명(MT_PM_KEY_NM)은  PM_PRODUCT_MNG_TB.PM_KEY 와  MT_PRODUCT_TB.MT_PM_FK_KEY를 조인해서
	     PM_PRODUCT_MNG_TB.PM_NM_CD를 사용하면 된다. -->
	<select id="selectWorkProductList" parameterType="com.cep.maintenance.contract.vo.MtDefaultVO"  resultMap="mtWorkProductVO">	

		SELECT 
			WP.MT_WORK_KEY AS MT_WORK_KEY
			, WP.MT_WORK_SEQ AS MT_WORK_SEQ
			, WP.MT_PM_KEY AS MT_PM_KEY
			, WP.MT_PM_WORK_CONT AS MT_PM_WORK_CONT
			, MT.MT_PM_SERIAL_NUM AS MT_PM_SERIAL_NUM
			, PM.PM_NM_CD AS MT_PM_KEY_NM
			, MT.MT_PM_DETAIL AS MT_PM_DETAIL
		FROM MT_WORK_PRODUCT_TB WP, MT_PRODUCT_TB MT, PM_PRODUCT_MNG_TB PM
		WHERE 1=1
			AND WP.MT_WORK_KEY = #{mtWorkKey}
			AND WP.MT_PM_KEY = MT.MT_PM_KEY
			AND MT.MT_PM_FK_KEY = PM.PM_KEY
			AND WP.DELETE_YN = 'N'
			ORDER BY WP.MT_WORK_SEQ	
	</select>
	
	<!--  유지보수작업 제품정보 수정-->
	<update id="updateWorkProductList" parameterType="java.util.HashMap">
		<foreach collection="mtWorkProductVoList" item="item" separator=";" close=";">
			UPDATE MT_WORK_PRODUCT_TB
			SET MT_PM_KEY = #{item.mtPmKey}
				, MT_PM_WORK_CONT = #{item.mtPmWorkCont}
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_WORK_KEY = #{mtWorkKey} 
				AND MT_WORK_SEQ = #{item.mtWorkSeq} 
		</foreach>
	</update>

	<!--  유지보수작업 제품정보 삭제-->
	<update id="deleteWorkProductList" parameterType="java.util.HashMap">
		UPDATE MT_WORK_PRODUCT_TB
			SET DELETE_YN='Y'
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s') 
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_WORK_KEY = #{mtWorkKey} 
				AND MT_WORK_SEQ IN   
			<foreach collection="deleteKeyList" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>
	</update>
	
	<!-- 유지보수 작업별 제품정보 전체삭제  -->
	<update id="deleteWorkProductAll" parameterType="com.cep.maintenance.work.vo.MtWorkVO">
		UPDATE MT_WORK_PRODUCT_TB
			SET DELETE_YN='Y'
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s') 
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_WORK_KEY = #{mtWorkKey} 
	</update>
	
	
	
	<!-- ===========================유지보수 작업 발주 ========================================= -->
	
	<!-- 유지보수작업 발주 등록 -->
	<insert id="writeMtWorkOrder" parameterType="com.cep.maintenance.work.vo.MtOrderVO">
	
		<!-- 유지보수작업 발주 메인등록 -->
		INSERT INTO MT_ORDER_TB (
		    MT_ORDER_KEY 
		    , MT_INTEGRATE_KEY
		    , ORDER_CT_FK_KEY
		    , ORDER_DT
		    , ORDER_AC_KEY 
		    , ORDER_AC_DIRECTOR_KEY 
		    , ORDER_PAY_TERMS 
		    , ORDER_AMOUNT 
		    , YET_PAYMENT_AMOUNT
		    , DONE_PAYMENT_AMOUNT
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY
		) VALUES (
		    #{mtOrderKey} 
		    , #{mtIntegrateKey} 
		    , #{orderCtFkKey} 
		    , #{orderDt}
		    , #{orderAcKey}
		    , #{orderAcDirectorKey}
		    , #{orderPayTerms}
		    , #{orderAmount}
		    , #{orderAmount}
		    , 0
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%H%i%s')
		    , #{regEmpKey}
		)				
	</insert>
	
	<insert id="writeMtWorkOrderProductList" parameterType="java.util.HashMap">
				
		<!-- 유지보수작업 발주 제품등록 -->
		INSERT INTO MT_ORDER_PRODUCT_TB (
		    MT_ORDER_KEY 
		    , ORDER_SEQ 
		    , ORDER_PM_FK_KEY
		    , ORDER_QUANTITY 
		    , ORDER_UPRICE 
		    , ORDER_RECEIPT_DT 
		    , MT_RATE
		    , ORDER_KIND
		    , ORDER_PM_DETAIL
		    , REG_DT 
		    , REG_TM 
		    , REG_EMP_KEY
		    )
		VALUES
		<foreach collection="mtOrderProductVoList" item="item" separator=",">
		    (
		    #{mtOrderKey} 
		    , (SELECT IFNULL(MAX(a.ORDER_SEQ) + 1, 1) FROM MT_ORDER_PRODUCT_TB a WHERE a.MT_ORDER_KEY=#{mtOrderKey})
		    , #{item.orderPmFkKey}
		    , #{item.orderQuantity}
		    , #{item.orderUprice}
		    , #{item.orderReceiptDt}
		    , 0
		    , #{item.orderKind}
		    , #{item.orderPmDetail}
		    , DATE_FORMAT(NOW(),'%Y%m%d')
		    , DATE_FORMAT(NOW(),'%H%i%s')
		    , #{regEmpKey}
		    )
		</foreach>    	
	</insert>
	
	<!-- 유지보수작업별 발주메인 등록 SELECT_BOX 리스트조회 -->
	<select id="selectWorkOrderSelectBoxList" parameterType="String" resultType="egovMap">			
		SELECT 
		  MO.MT_ORDER_KEY
		  , MO.ORDER_AC_KEY
		  , CA.AC_NM AS MT_AC_NM
		FROM MT_ORDER_TB MO , CMM_ACCOUNT_TB CA
		WHERE MO.ORDER_CT_FK_KEY=#{orderCtFkKey}
			AND MO.DELETE_YN='N'	
			AND MO.ORDER_AC_KEY = CA.AC_KEY	
	</select>
	
	<!-- 유지보수작업 발주 메인상세 -->
	<select id="selectWorkOrderDetail" parameterType="String" resultType="com.cep.maintenance.work.vo.MtOrderVO">	
		SELECT 
			MO.MT_ORDER_KEY AS mtOrderKey
			, MO.MT_INTEGRATE_KEY AS mtIntegrateKey
			, MO.ORDER_CT_FK_KEY AS orderCtFkKey
			, MO.ORDER_AC_KEY AS orderAcKey
		  	, CA.AC_NM AS orderAcKeyNm
			, MO.ORDER_AC_DIRECTOR_KEY AS orderAcDirectorKey
			, MO.ORDER_PAY_TERMS AS orderPayTerms
			, MO.ORDER_AMOUNT AS orderAmount
			, MO.ORDER_DT AS orderDt
			, MO.YET_PAYMENT_AMOUNT AS yetPaymentAmount
			, MO.DONE_PAYMENT_AMOUNT AS donePaymentAmount
			, (
				SELECT 
					IFNULL(SUM(CALL_AMOUNT),0) 
				FROM MT_PAYMENT_TB 
				WHERE PAYMENT_BUY_FK_KEY=#{mtOrderKey}
					AND DELETE_YN = 'N'
				) AS callTotalAmount /* 지급요청금액*/
		FROM MT_ORDER_TB MO , CMM_ACCOUNT_TB CA
		WHERE MT_ORDER_KEY = #{mtOrderKey} 
			AND MO.DELETE_YN='N'  
		  	AND MO.ORDER_AC_KEY = CA.AC_KEY
	</select>
	
	<!-- 유지보수작업 발주 목록조회 -->
	<select id="selectWorkOrderList" parameterType="java.util.HashMap" resultType="com.cep.maintenance.work.vo.MtOrderVO">		
		SELECT 
			MO.MT_ORDER_KEY AS mtOrderKey
			, MO.MT_INTEGRATE_KEY AS mtIntegrateKey
			, MO.ORDER_CT_FK_KEY AS orderCtFkKey
			, MO.ORDER_AC_KEY AS orderAcKey
		  	, CA.AC_NM AS orderAcKeyNm
			, MO.ORDER_AC_DIRECTOR_KEY AS orderAcDirectorKey
      		, AD.AC_DIRECTOR_NM AS orderAcDirectorNm
			, MO.ORDER_PAY_TERMS AS orderPayTerms
			, MO.ORDER_AMOUNT AS orderAmount
			, MO.ORDER_DT AS orderDt
			, MO.YET_PAYMENT_AMOUNT AS yetPaymentAmount
			, MO.DONE_PAYMENT_AMOUNT AS donePaymentAmount
		FROM MT_ORDER_TB MO , CMM_ACCOUNT_TB CA, CMM_ACCOUNT_DIRECTOR_TB AD
		WHERE 1=1
			<if test="mtIntegrateKey != null and mtIntegrateKey != ''">
				AND MO.MT_INTEGRATE_KEY = #{mtIntegrateKey} 
			</if>
			<if test="orderCtFkKey != null and orderCtFkKey != ''">
				AND MO.ORDER_CT_FK_KEY = #{orderCtFkKey} 
			</if>			
			AND MO.DELETE_YN='N'  
		  	AND MO.ORDER_AC_KEY = CA.AC_KEY
		  	AND MO.ORDER_AC_KEY = AD.AC_KEY
		  	AND MO.ORDER_AC_DIRECTOR_KEY = AD.AC_DIRECTOR_KEY
	</select>	
	
	
	<!-- 유지보수작업별 발주 제품목록 -->
	<select id="selectWorkOrderProductList" parameterType="String" resultType="com.cep.maintenance.work.vo.MtOrderProductVO">
		SELECT
			MP.MT_ORDER_KEY AS mtOrderKey
			, MP.ORDER_SEQ AS orderSeq
			, MP.ORDER_PM_FK_KEY AS orderPmFkKey
			, PM.PM_NM_CD AS orderPmFkNm
			, MP.ORDER_QUANTITY AS orderQuantity
			, MP.ORDER_UPRICE AS orderUprice
			, MP.ORDER_RECEIPT_DT AS orderReceiptDt
  			, MP.MT_RATE AS mtRate
			, MP.ORDER_KIND AS orderKind
			, CD.CD_NM AS orderKindNm
			, MP.ORDER_PM_DETAIL AS orderPmDetail
		FROM MT_ORDER_PRODUCT_TB MP, PM_PRODUCT_MNG_TB PM, CMM_CODE_MNG_TB CD
		WHERE MP.MT_ORDER_KEY = #{mtOrderKey}
			AND MP.DELETE_YN='N'
			AND CD.CD_UP_CD='PRODUCT'
			AND MP.ORDER_PM_FK_KEY = PM.PM_KEY
			AND MP.ORDER_KIND = CD.CD_KEY
	</select>
	
	<!-- 유지보수작업별 거래처별 발주메인 삭제 -->
	<update id="deleteWorkOrder" parameterType="java.util.HashMap">
		UPDATE MT_ORDER_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY=#{mtOrderKey}
			AND DELETE_YN='N'
	</update>
	
		<!-- 유지보수작업별 거래처별 발주제품목록 전체삭제  -->
	<update id="deleteWorkOrderProduct" parameterType="java.util.HashMap">
		UPDATE MT_ORDER_PRODUCT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY=#{mtOrderKey}
			AND DELETE_YN='N'
	</update>
	
	<!-- 유지보수작업별 전체 발주삭제 삭제(유지보수 작업 삭제시 호출)-->
	<update id="deleteWorkOrderAll" parameterType="java.util.HashMap">
		UPDATE MT_ORDER_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE ORDER_CT_FK_KEY=#{orderCtFkKey}
			AND DELETE_YN='N'
	</update>	

	
	<!-- 유지보수작업에 대한 전체 백계약 제품목록 전체삭제(유지보수작업이 삭제되는 경우 호출됨) -->
	<update id="deleteWorkOrderProductAll" parameterType="java.util.HashMap">
		UPDATE MT_ORDER_PRODUCT_TB MP
			INNER JOIN MT_ORDER_TB MO 
			ON MP.MT_ORDER_KEY = MO.MT_ORDER_KEY
		SET MP.DELETE_YN='Y'
			, MP.MOD_EMP_KEY = #{modEmpKey}
			, MP.MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MP.MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
		WHERE MO.ORDER_CT_FK_KEY=#{orderCtFkKey}
			AND MP.DELETE_YN='N'
	</update>	
	
	<!-- 유지보수계약별 전체 유지보수작업 발주삭제 삭제(유지보수계약 작업 삭제시 호출) -->
	<update id="deleteContractWorkOrderAll" parameterType="java.util.HashMap">
		UPDATE MT_ORDER_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_INTEGRATE_KEY=#{mtIntegrateKey}
			AND DELETE_YN='N'
	</update>	

	
	<!-- 유지보수계약에 대한 전체 유지보수작업 제품목록 전체삭제(유지보수계약이 삭제되는 경우 호출됨)  -->
	<update id="deleteContractWorkOrderProductAll" parameterType="java.util.HashMap">
		UPDATE MT_ORDER_PRODUCT_TB MP
			INNER JOIN MT_ORDER_TB MO 
			ON MP.MT_ORDER_KEY = MO.MT_ORDER_KEY
		SET MP.DELETE_YN='Y'
			, MP.MOD_EMP_KEY = #{modEmpKey}
			, MP.MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MP.MOD_TM = DATE_FORMAT(NOW(),'%H%i%s')
		WHERE MO.MT_INTEGRATE_KEY=#{mtIntegrateKey}
			AND MP.DELETE_YN='N'
	</update>	
	
	
	<!-- 유지보수작업별 거래처별 제품목록 리스트삭제 -->
	<update id="deleteWorkOrderProductList" parameterType="java.util.HashMap">	
		UPDATE MT_ORDER_PRODUCT_TB
		SET DELETE_YN='Y'
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_ORDER_KEY = #{mtOrderKey}
				AND ORDER_SEQ IN
			<foreach collection="deleteKeyList" item="item" index="index" separator="," open="(" close=")">
				#{item}
			</foreach>	
	</update>
	
	<!-- 유지보수작업별 발주 메인정보수정 -->
	<update id="updateWorkOrder" parameterType="com.cep.maintenance.work.vo.MtOrderVO">	
		UPDATE MT_ORDER_TB
		SET ORDER_AC_KEY = #{orderAcKey}
			, ORDER_AC_DIRECTOR_KEY = #{orderAcDirectorKey}
			, ORDER_PAY_TERMS = #{orderPayTerms}
			, ORDER_AMOUNT = #{orderAmount}
			, YET_PAYMENT_AMOUNT = #{yetPaymentAmount}
			, ORDER_DT = #{orderDt}
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY = #{mtOrderKey}
	</update>	
	
	<!-- 유지보수작업별 발주 계산서 맵핑회수 수정 -->
	<update id="updateWorkOrderMappingNum" parameterType="java.util.HashMap">	
		UPDATE MT_ORDER_TB
		SET BILL_MAPPING_NUM = #{billMappingNum}
			, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
			, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s') 
			, MOD_EMP_KEY = #{modEmpKey}
		WHERE MT_ORDER_KEY = #{mtOrderKey}
	</update>	
	
	<!-- 유지보수계약 백계약 제품리스트 정보수정. -->
	<update id="updateWorkOrderProductList" parameterType="java.util.HashMap">
		<foreach collection="mtOrderProductVoList" item="item" separator=";" close=";">
			UPDATE MT_ORDER_PRODUCT_TB
			SET ORDER_PM_FK_KEY=#{item.orderPmFkKey} 
				, ORDER_QUANTITY = #{item.orderQuantity}
				, ORDER_UPRICE = #{item.orderUprice}
				, ORDER_RECEIPT_DT = #{item.orderReceiptDt}
				<!-- , MT_RATE = #{item.mtRate} -->
		    	, ORDER_KIND = #{item.orderKind}
		    	, ORDER_PM_DETAIL = #{item.orderPmDetail}
				, MOD_DT = DATE_FORMAT(NOW(),'%Y%m%d')
				, MOD_TM = DATE_FORMAT(NOW(),'%H%i%s') 
				, MOD_EMP_KEY = #{modEmpKey}
			WHERE MT_ORDER_KEY = #{mtOrderKey}
				AND ORDER_SEQ = #{item.orderSeq}
		</foreach>
	</update>

	
	
	
</mapper>

